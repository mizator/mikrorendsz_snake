###################################################################
##
## Name     : logsys_axi_sp6_simpleio
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN logsys_axi_sp6_simpleio

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = LOGSYS_AXI_SP6_SIMPLEIO
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)

## I/O interfaces
IO_INTERFACE IO_IF = cpld_if0, IO_TYPE = CPLD_IF_V1
IO_INTERFACE IO_IF = gpio_if0, IO_TYPE = GPIO_IF_V1

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 4, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x0000000f, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_DPHASE_TIMEOUT = 4, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_DPHASE_TIMEOUT = 4, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_NUM_REG = 4, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_NUM_MEM = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_SLV_AWIDTH = 4, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_SLV_DWIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI
PARAMETER C_GPIO_ENABLE = 1, DT = INTEGER, RANGE = (0,1)

PARAMETER C_GPIO_WIDTH = 13, DT = INTEGER, RANGE = (1:16), ISVALID = (C_GPIO_ENABLE == 1)

## User ports

PORT irq         = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT btn_in      = "", DIR = I, VEC = [2:0]
PORT sw_out      = "", DIR = O, VEC = [7:0]

PORT cpld_jtagen = "", DIR = O, IO_IF = cpld_if0

PORT cpld_rstn   = "", DIR = O, IO_IF = cpld_if0

PORT cpld_clk    = "", DIR = O, IO_IF = cpld_if0

PORT cpld_load   = "", DIR = O, IO_IF = cpld_if0

PORT cpld_mosi   = "", DIR = O, IO_IF = cpld_if0

PORT cpld_miso   = "", DIR = I, IO_IF = cpld_if0
PORT gpio_I      = "", DIR = I,  VEC = [(C_GPIO_WIDTH-1):0], IO_IF = gpio_if0, ISVALID = (C_GPIO_ENABLE == 1)
PORT gpio_O      = "", DIR = O,  VEC = [(C_GPIO_WIDTH-1):0], IO_IF = gpio_if0, ISVALID = (C_GPIO_ENABLE == 1)
PORT gpio_T      = "", DIR = O,  VEC = [(C_GPIO_WIDTH-1):0], IO_IF = gpio_if0, ISVALID = (C_GPIO_ENABLE == 1)
PORT gpio_IO     = "", DIR = IO, VEC = [(C_GPIO_WIDTH-1):0], TRI_I = gpio_I, TRI_O = gpio_O, TRI_T = gpio_T, THREE_STATE = TRUE, ENABLE = MULTI, IO_IF = gpio_if0, ISVALID = (C_GPIO_ENABLE == 1)

## Ports
PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

END
